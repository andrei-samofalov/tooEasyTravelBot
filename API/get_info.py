import json
import time
from datetime import datetime
from http import HTTPStatus
from typing import Dict

import requests

from bot_interface.custom_functions import photos_output, total_cost
from database.data_load import (collected_data, load_to_dict, load_to_json,
                                new_user)
from loader import bot
from settings.config import (ECHO_MESSAGE, headers, sort_order, url_city,
                             url_hotel, url_photos)


def city_search(city: str) -> Dict:
    """
    –ó–∞–ø—Ä–æ—Å –∫ API —Å–∞–π—Ç–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –≤–æ–∑–º–æ–∂–Ω—ã—Ö —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π –ø–æ –∑–∞–ø—Ä–æ—Å—É –≥–æ—Ä–æ–¥–∞
    :param city: str, ID –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è
    :return dict
    """
    query = {'query': city, 'locale': 'ru_RU', 'currency': 'RUB'}
    response = requests.request(
        method='GET', url=url_city, headers=headers, params=query
    )
    if response.status_code == HTTPStatus.OK:
        dict_city_response = json.loads(response.text)
        dict_city_response = dict_city_response['suggestions'][0]['entities']

        dict_city_destination = {}
        for item in dict_city_response:
            dict_city_destination[item['name']] = item['destinationId']

        return dict_city_destination
    else:
        print(f'–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ {response.status_code}')


def hotel_search(city_id: int, check_in: str, check_out: str,
                 amount_of_suggestion: int, command: str,
                 max_price: str = '1000000', min_price: str = '1') -> Dict:

    """
        –ó–∞–ø—Ä–æ—Å –∫ API —Å–∞–π—Ç–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –æ—Ç–µ–ª–µ–π
        :param city_id
        :param check_in
        :param check_out
        :param max_price
        :param min_price
        :param amount_of_suggestion
        :param command

        :return dict: —Å–ª–æ–≤–∞—Ä—å —Å –æ—Ç–µ–ª—è–º–∏
    """

    querystring = {
        "destinationId": city_id,
        "pageNumber": "1",
        "pageSize": amount_of_suggestion,
        "checkIn": check_in,
        "checkOut": check_out,
        "adults1": "1",
        "sortOrder": sort_order[command],
        "locale": "ru_RU",
        "currency": "RUB",
        "priceMin": min_price,
        "priceMax": max_price,
    }
    response = requests.request(
        method="GET", url=url_hotel, headers=headers, params=querystring
    )
    if response.status_code == HTTPStatus.OK:
        hotels = json.loads(response.text)
        hotels = hotels['data']['body']['searchResults']['results']

        return hotels

    else:
        print(f'–û—à–∏–±–∫–∞ {response.status_code}')


def photo_search(hotel_id) -> Dict | int:
    """
    –ó–∞–ø—Ä–æ—Å –∫ API —Å–∞–π—Ç–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Å—ã–ª–æ–∫ –Ω–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏

    :param hotel_id: ID –æ—Ç–µ–ª—è –∏–∑ –∑–∞–ø—Ä–æ—Å–∞ hotel_search
    :return: —Å–ø–∏—Å–æ–∫ —Å—Å—ã–ª–æ–∫ –Ω–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
    """

    querystring = {"id": str(hotel_id)}
    response = requests.request(
        method="GET", url=url_photos, headers=headers, params=querystring
    )
    if response.status_code == HTTPStatus.OK:
        return json.loads(response.text)
    else:
        print(f'–û—à–∏–±–∫–∞ {response.status_code}')
        return response.status_code


def is_valid_date(date: datetime) -> bool:
    """
    –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞—Ç—ã –Ω–∞ —Ñ–æ—Ä–º–∞—Ç –∏ —Ç–æ, —á—Ç–æ–±—ã –Ω–µ –±—ã–ª–∞ —Ä–∞–Ω—å—à–µ —Ç–µ–∫—É—â–µ–π
    :param date: datetime
    :return: bool
    """
    try:
        if date > datetime.today().date():
            return True
    except ValueError:
        return False


def display_results(user_id: int) -> None:
    """

    –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞—â–∞–µ—Ç—Å—è –∫ –∫–∞–∂–¥–æ–º—É –æ—Ç–µ–ª—é —Ñ—É–Ω–∫—Ü–∏–µ–π photo_search,
    –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –æ—Ç–µ–ª—è —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç –¥–∞–Ω–Ω—ã–µ, –≤—ã–≤–æ–¥–∏–º—ã–µ –≤ —á–∞—Ç –±–æ—Ç–∞

    :param user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –ø–æ–ª—É—á–µ–Ω–Ω–æ–≥–æ –∏–∑ message.from_user.id
    –∏–ª–∏ call.from_user.id
    :return: None
    –†–µ–∑—É–ª—å—Ç–∞—Ç –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –≤ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–≥–æ –∏–∑ loader –±–æ—Ç–∞ –≤ –∏–º–ø–æ—Ä—Ç–∞—Ö

    """

    bot.send_message(chat_id=user_id,
                     text='–í–∞—à –∑–∞–ø—Ä–æ—Å –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è...')

    with bot.retrieve_data(user_id) as request_dict:

        results = hotel_search(
            city_id=request_dict.get('destination_id'),
            check_in=request_dict.get('–î–∞—Ç–∞ –∑–∞–µ–∑–¥–∞'),
            check_out=request_dict.get('–î–∞—Ç–∞ –≤—ã–µ–∑–¥–∞'),
            amount_of_suggestion=request_dict.get('–ö–æ–ª-–≤–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π'),
            command=request_dict.get('–ö–æ–º–∞–Ω–¥–∞'),
            max_price=request_dict.get('–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞'),
            min_price=request_dict.get('–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞'),
        )

        user_dict = new_user(user_id=user_id)
        if results:
            for item in results:

                cost_of_journey = total_cost(
                    check_in=request_dict.get('–î–∞—Ç–∞ –∑–∞–µ–∑–¥–∞'),
                    check_out=request_dict.get('–î–∞—Ç–∞ –≤—ã–µ–∑–¥–∞'),
                    cost=item.get('ratePlan', {}).get('price', {}).get('exactCurrent', 0)
                )

                display_list = [
                    ('‚û° <b>–ù–∞–∑–≤–∞–Ω–∏–µ</b>', f"<a href='https://www.hotels.com/ho{item['id']}'>{item['name']}</a>"),
                    ('‚≠ê <b>–ó–≤–µ–∑–¥–Ω–æ—Å—Ç—å</b>', item.get('starRating', '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö')),
                    ('üèÜ <b>–û—Ü–µ–Ω–∫–∞ –ø–æ—Å–µ—Ç–∏—Ç–µ–ª–µ–π</b>', f"{item.get('guestReviews', {}).get('rating', '- ')}"
                                                    f"/{item.get('guestReviews', {}).get('scale', ' -')}"),
                    ('üó∫Ô∏è <b>–ê–¥—Ä–µ—Å</b>', item.get('address', {}).get('streetAddress', '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö')),
                    ('üìå <b>–†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –¥–æ —Ü–µ–Ω—Ç—Ä–∞</b>', item.get('landmarks', [])[0].get('distance', '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö')),
                    ('üíµ <b>–¶–µ–Ω–∞ –∑–∞ –Ω–æ—á—å</b>', item.get('ratePlan', {}).get('price', {}).get('current', '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö')),
                    ('üí∞ <b>–û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è</b>', f'{cost_of_journey:,d} RUB')
                ]
                display = [f'{key}: {value}' for key, value in display_list]

                new_dict = load_to_dict(user_dict=user_dict, command=collected_data(request_dict),
                                        time=time.strftime('%d.%m.%y %H:%M'), data_list=display)

                if request_dict.get('–ö–æ–ª-–≤–æ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π'):
                    hotel_photos = photo_search(hotel_id=item['id'])

                    # –µ—Å–ª–∏ –ø–æ–ª—É—á–µ–Ω–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç - —Å–ª–æ–≤–∞—Ä—å, —Ç–æ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å –≤
                    # —Ç–µ–ª–µ–≥—Ä–∞–º-–º–µ–¥–∏–∞ –∏ –≤—ã–≥—Ä—É–∑–∏—Ç—å –≤ —á–∞—Ç

                    if isinstance(hotel_photos, dict):
                        hotel_photos = photos_output(
                            photos=hotel_photos,
                            amount=request_dict.get('–ö–æ–ª-–≤–æ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π', 0),
                            caption='\n'.join(display)
                        )
                        bot.send_media_group(chat_id=user_id, media=hotel_photos)
                    else:
                        bot.send_message(chat_id=user_id,
                                         text='–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏')
                else:
                    bot.send_message(chat_id=user_id, text='\n'.join(display),
                                     disable_web_page_preview=True)
                time.sleep(1)
            else:
                load_to_json(user_id=user_id, user_dict=new_dict)
                bot.send_message(
                    chat_id=user_id,
                    text='–í—Å–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤—ã–≥—Ä—É–∂–µ–Ω—ã.\n' + ECHO_MESSAGE
                )
        else:
            bot.send_message(
                chat_id=user_id,
                text='–ü–æ –∑–∞–ø—Ä–æ—Å—É –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.\n' + ECHO_MESSAGE
            )
